name: Tusk Test Runner

on:
  workflow_dispatch:
    inputs:
      runId:
        description: "Tusk Run ID"
        required: true
      tuskUrl:
        description: "Tusk server URL"
        required: true
      commitSha:
        description: "Commit SHA to checkout"
        required: true

jobs:
  test-action:
    name: Tusk Test Runner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Tusk Test runner
        id: test-action
        uses: pan-jensenlin/repo-runner
        with:
          runId: ${{ github.event.inputs.runId }}
          tuskUrl: ${{ github.event.inputs.tuskUrl }}
          commitSha: ${{ github.event.inputs.commitSha }}
          authToken: ${{ secrets.TUSK_AUTH_TOKEN }}
          testFramework: "pytest"
          testFileRegex: "^tests/.*(test_.*|.*_test).py$"
          testScript: "pytest {{file}}"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Tusk Linter
        uses: your-organization/tusk-action@v1 # Replace with the actual Tusk Action
        with:
          # Add any necessary inputs for the Tusk Action
          config-file: .tusk.yml

  run-linters:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      # ... any other linting steps (e.g., using `wearerequired/lint-action`) ...

      # Add the Tusk test runner step
      - name: Run Tusk tests
        uses: usetusk/tusk-run-tests@v1 # Use the latest version available
        with:
          # Your Tusk-specific inputs, if any
          token: ${{ secrets.GITHUB_TOKEN }}
          # other configuration options